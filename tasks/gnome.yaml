# sudo true && ansible-playbook single.yaml --diff -e task=gnome --skip-tags extensions
---
- name: Check gnome shell version
  shell: "/usr/bin/gnome-shell --version | grep 3.34"
  register: gnome_shell_compatible_version
  changed_when: no
  check_mode: no
  ignore_errors: yes

- set_fact:
    # Extension urls should contain version to be able to make version check without downloading
    gnome_extensions:
      - id: dash-to-panel@jderose9.github.com
        url: https://extensions.gnome.org/extension-data/dash-to-paneljderose9.github.com.v23.shell-extension.zip
      # https://extensions.gnome.org/extension/1267/no-title-bar/
      - id: no-title-bar@franglais125.gmail.com
        url: https://extensions.gnome.org/extension-data/no-title-bar%40franglais125.gmail.com.v9.shell-extension.zip
      # https://extensions.gnome.org/extension/1732/gtk-title-bar/
      # Use until no title bar is fixed for gnome 3.32
      - id: gtktitlebar@velitasali.github.io
        url: https://extensions.gnome.org/extension-data/gtktitlebarvelitasali.github.io.v2.shell-extension.zip
      - id: switcher@landau.fi
        url: https://extensions.gnome.org/extension-data/switcherlandau.fi.v25.shell-extension.zip
      - id: sound-output-device-chooser@kgshank.net
        url: https://extensions.gnome.org/extension-data/sound-output-device-chooserkgshank.net.v25.shell-extension.zip
  when: gnome_shell_compatible_version is not failed

- set_fact:
    gnome_extensions: []
  when: gnome_shell_compatible_version is failed

- set_fact:
    gnome_favorite_apps:
      - 'firefox.desktop'
      - 'org.gnome.Terminal.desktop'
      - 'emacs.desktop'
      - 'org.gnome.Nautilus.desktop'

- name: Check whether gnome shell is installed
  stat:
    path: /usr/bin/gnome-shell
  register: gnome_stat

- name: Install gnome tools
  apt:
    name:
      - dconf-editor
      - gnome-tweaks
      - network-manager-openvpn-gnome
      - python-psutil
      - python3-psutil
  become: yes
  when: gnome_stat.stat.exists

- block:
    - name: Use caps as control
      dconf:
        key: "/org/gnome/desktop/input-sources/xkb-options"
        value: "['ctrl:nocaps']"

    - name: Set Bulgarian bds keyboard layout
      dconf:
        key: "/org/gnome/desktop/input-sources/sources"
        value: "[('xkb', 'us'), ('xkb', 'bg')]"

    - name: Read favorite apps
      dconf:
        key: "/org/gnome/shell/favorite-apps"
        state: read
      register: dconf_favorite_apps

    - set_fact:
        favorite_apps: "{{ dconf_favorite_apps.value | from_yaml if dconf_favorite_apps.value != None else [] }}"

    - name: Set some favorite apps to be easily accessible with Super-#
      dconf:
        key: "/org/gnome/shell/favorite-apps"
        value: "{{ (gnome_favorite_apps + favorite_apps) | unique }}"

    - name: Disable media automount
      dconf:
        key: "/org/gnome/desktop/media-handling/automount"
        value: "false"

    - name: Activate gnome's night light mode
      dconf:
        key: "/org/gnome/settings-daemon/plugins/color/night-light-enabled"
        value: "true"

    # Extensions
    - block:
      - name: Remove ubuntu dock as it breaks dash-to-panel shortcuts
        apt:
          name: gnome-shell-extension-ubuntu-dock
          state: absent
        become: yes
        # TODO: remove only when installing dock-to-panel
        when: gnome_shell_compatible_version is not failed

      - name: Install x11-utils for no title bar
        apt:
          name: x11-utils
        when: "'no-title-bar' in gnome_extensions | json_query('[*].id') | join"
        become: yes

      - setup:
        when: ansible_user_dir is not defined

      - name: Check installed extension directories
        stat:
          path: "{{ ansible_user_dir }}/.local/share/gnome-shell/extensions/{{ item.id }}/metadata.json"
        loop: "{{ gnome_extensions | default([]) }}"
        register: extention_metadata_stat
      - name: Remove extensions with different version
        file:
          state: absent
          path: "{{ item.invocation.module_args.path | dirname }}"
        when:
          - item.stat.exists
          # FIXME: lookup user control machine, not remote
          - "item.item.url.find('.v' + ((lookup('file', item.invocation.module_args.path, errors='ignore') | from_json)['version']|string) + '.') == -1"
        loop: "{{ extention_metadata_stat.results }}"

      - name: Create GNOME extension directories
        file:
          path: "{{ ansible_user_dir }}/.local/share/gnome-shell/extensions/{{ item.id }}"
          state: directory
        with_items: "{{ gnome_extensions | default([]) }}"

      - name: unarchive GNOME extensions
        unarchive:
          src: "{{ item.url }}"
          dest: "{{ ansible_user_dir }}/.local/share/gnome-shell/extensions/{{ item.id }}"
          creates: "{{ ansible_user_dir }}/.local/share/gnome-shell/extensions/{{ item.id }}/metadata.json"
          remote_src: yes
        with_items: "{{ gnome_extensions | default([]) }}"

      - name: Read gnome extensions
        dconf:
          key: "/org/gnome/shell/enabled-extensions"
          state: read
        register: dconf_enabled_extensions

      - set_fact:
          gnome_extensions_current: "{{ dconf_enabled_extensions.value | from_yaml if dconf_enabled_extensions.value != None else [] }}"

      - name: Enable extensions
        dconf:
          key: "/org/gnome/shell/enabled-extensions"
          value: "{{ (gnome_extensions | json_query('[*].id') + gnome_extensions_current) | unique }}"

      - name: Dash to panel settings
        dconf:
          key: "/org/gnome/shell/extensions/dash-to-panel/{{ item | regex_replace('=.*') }}"
          value: "{{ item | regex_replace('.*=') }}"
        with_items:
          - animate-show-apps=false
          - appicon-margin=0
          - click-action='RAISE'
          - dot-position='TOP'
          - dot-style-focused='DOTS'
          - dot-style-unfocused='DOTS'
          - focus-highlight=true
          - hot-keys=true
          - location-clock='STATUSRIGHT'
          - panel-position='TOP'
          - panel-size=24
          - show-activities-button=false
          - show-appmenu=false
          - show-favorites=true
          - show-show-apps-button=true
          - show-showdesktop-button=false
          - show-window-previews=false

      - name: Rebind <Alt>Tab to switch applications and free <Super>Tab
        dconf:
          key: "/org/gnome/desktop/wm/keybindings/{{ item | regex_replace('=.*') }}"
          value: "{{ item | regex_replace('.*=') }}"
        loop:
          - switch-applications-backward=['<Shift><Alt>Tab']
          - switch-applications=['<Alt>Tab']
          - switch-windows-backward=@as []
          - switch-windows=@as []

      - name: Switcher change shortcut
        dconf:
          key: "/org/gnome/shell/extensions/switcher/{{ item | regex_replace('=.*') }}"
          value: "{{ item | regex_replace('.*=') }}"
        loop:
          - show-switcher=['<Super>Tab']
          - show-launcher=['<Super>x']

      tags:
        - extensions
  when: gnome_stat.stat.exists
